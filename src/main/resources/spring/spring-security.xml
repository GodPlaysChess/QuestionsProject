<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- enable use-expressions -->
    <http auto-config="true" use-expressions="true">

        <headers>
            <cache-control />
        </headers>

        <intercept-url pattern="/start.html" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/teacher/**" access="hasAnyRole('ROLE_TEACHER', 'ROLE_ADMIN')" />
        <intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />

        <form-login login-page="/login.html"
                    default-target-url="/"
                    authentication-failure-url="/login.html?error"
                    username-parameter="username"
                    password-parameter="password"
                    login-processing-url="/auth/login_check" />

        <logout logout-success-url="/login.html?logout" delete-cookies="JSESSIONID" />
        <!--<csrf />-->

    </http>

    <!-- Select users and user_roles from database -->
    <authentication-manager >
        <authentication-provider ref="authProvider"></authentication-provider>
    </authentication-manager>
    <beans:bean id="authProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsServiceImpl" />
        <beans:property name="passwordEncoder" ref="encoder" />
    </beans:bean>
    <!-- For hashing and salting user passwords -->
    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans:beans>